#!groovy

// 调用ShareLibray jenkinslib@main
@Library('jenkinslib@main') _

// 实例化build方法
def build = new org.devops.build()
def deploy = new org.devops.deploy()
def tools = new org.devops.tools()
//def toemail = new org.devops.toemail()

// 调用参数构建参数buildType buildShell和deployHosts
String buildType = "${env.buildType}"
String buildShell = "${env.buildShell}"
String deployHosts = "${env.deployHosts}"

// 定义构建时传入的gitlab项目地址和分支名称
String scrUrl = "${env.srcUrl}"
String branchName = "${env.branchName}"

if ( "${runOpts}" == "GitlabPush" ) {
    branchName = branch - "refs/heads/"
    println("${branchName}")
    
    currentBuild.description = "Trigger by ${userName} ${branch}"
}

pipeline {
    agent { node { label "node1"} }

    stages {
        stage("Checkout"){
            steps {
                script {
                    tools.PrintMessage("下载代码","green")
                    println("${branchName}")
                    checkout([$class: 'GitSCM', branches: [[name: "${branchName}"]], extensions: [], userRemoteConfigs: [[credentialsId: 'a61154ed-c244-4737-9393-1fc8b13c25d3', url: "${srcUrl}"]]]) 
                }
            }
        }
        
        stage("Build") {
            steps {
                script {
                    tools.PrintMessage("执行打包","red")
                    build.Build(buildType, buildShell)
                    
                    // 上传制品
                    def jarName = sh returnStdout: true, script: "cd target; ls *.jar"
                    jarName = jarName - "\n"
                    
                    def pom = readMavenPom file: 'pom.xml'
                    pomVersion = "${pom.version}"
                    pomArtifact = "${pom.artifactId}"
                    pomPackaging = "${pom.packaging}"
                    pomGroupId = "${pom.groupId}"
                    
                    println("${jarName}")
                    println("${pomGroupId}    ${pomArtifact}    ${pomVersion}    ${pomPackaging}")
                    
                    def mvnHome = tool "MAVEN"
                    """
                    sh cd target
                    ${mvnHome}/bin/mvn deploy:deploy-file -Dmaven.test.skip=ture -Dfile=${jarName} -DgroupId=${pomGroupId} -DartifactId=${pomArtifact} -Dversion=${pomVersion} -Dpackaging=${pomPackaging} -DrepositoryId=maven_snapshot -Durl=http://192.168.9.69:8081/repository/maven_snapshot
                    """
                    
                    //deploy.AnsibleDeploy("${deployHosts}", "-m ping")
                }
            }
        }    
    }
    
    post {
            always {
                script {
                    println("always")
                }
            }
            
            success {
                script {
                    println("流水线构建成功")
                    //tomail.Email("流水线构建成功",userEmail)
                }
            }
            
            failure {
                script {
                    println("流水线构建失败")
                    //tomail.Email("流水线构建失败",userEmail)
                }
            }
            
            aborted {
                script {
                    println("流水线构建被取消")
                    //tomail.Email("流水线构建被取消",userEmail)
                }
            }
        }
}
